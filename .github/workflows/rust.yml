name: Rust

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Formatting:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      
      - name: Check format
        run: cargo fmt -- --check

  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  Linting:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      
      - name: Lint with clippy
        uses: actions-rs-plus/clippy-check@cbcfbff5103c40b26d7077f164f0ec6052036081
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -A clippy::uninlined_format_args

